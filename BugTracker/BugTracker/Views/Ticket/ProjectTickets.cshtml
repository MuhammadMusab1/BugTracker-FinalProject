@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<BugTracker.Models.Ticket>

@{
    ViewData["Title"] = "Project Tickets";
}

<h1>Project Tickets</h1>

<div>
    <a asp-controller="Ticket" asp-action="CreateTicket" asp-route-projectId="@ViewBag.ProjectId">Create New Ticket</a>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                Title
            </th>
            <th>
                Project
            </th>
            <th>
                Developer
            </th>
            <th>
                Submitter
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Project.Name)
            </td>
            <td>
                    @if(item.DeveloperId == null)
                    {
                        <div style="font-weight: bold;color: red;">Unassign</div>
                    }
                    else
                    {
                        <div style="font-weight: bold;color: purple;"> @item.Developer.UserName</div>
                    }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Submitter.UserName)
            </td>
            <td>
                <a asp-action="UpdateTicket" asp-route-ticketId="@item.Id">Edit</a> |
                <a asp-action="TicketDetails" asp-route-ticketId="@item.Id">Details</a>
            </td>
        </tr>
}
    </tbody>
</table>

<nav aria-label="Ticket navigation">
    @Html.PagedListPager(Model, page => Url.Action("ProjectTickets", new {page = page, projectId = ViewBag.ProjectId}), 
    
    new X.PagedList.Web.Common.PagedListRenderOptions 
    {
        DisplayItemSliceAndTotal = false,
        ContainerDivClasses = new[] {"navigation"},
        LiElementClasses = new[] {"page-item"},
        PageClasses = new[] {"page-link"},
    })
</nav>
